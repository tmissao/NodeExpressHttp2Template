#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require('../app')
const spdy = require('spdy')
const fs = require('fs')

/*
 * SSL
 */
const options = {
  key: fs.readFileSync('./server.key'),
  cert: fs.readFileSync('./server.crt')
}

/**
 * Get port from environment and store in Express.
 */

const port = normalizePort('3000')

/**
 * Create HTTP2 server.
 */

spdy
  .createServer(options, app)
  .listen(port, (error) => {
    if (error) {
      console.error(error)
      return process.exit(1)
    } else {
      console.log('Listening on port: ' + port + '.')
    }
  })

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    // named pipe
    return val
  }

  if (port >= 0) {
    // port number
    return port
  }

  return false
}
